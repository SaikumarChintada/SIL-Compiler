decl
Integer a[16]; 
Integer partition(Integer p,r); 
bool quicksort(bool t; Integer p,r); 
Integer swap(Integer &x,&y);
enddecl



Integer swap(Integer &x,&y){
decl
Integer temp;
enddecl
	begin
		temp = x;
		x=y;
		y=temp;
		return 1;
	end
}

Integer partition(Integer p,r){
decl
Integer x,i,j,dummy;
enddecl	
begin
	x=a[r];
	i=p-1;
	j=p;
	while(j<r) do
		if (a[j]<=x) then
			i=i+1;
			dummy=swap(&a[i],&a[j]);
		endif;
		j=j+1;
	endwhile;
	dummy=swap(&a[i+1],&a[r]);
	return i+1;
	end
}

bool quicksort(bool t; Integer p,r)
{
decl
	Integer q; bool dummy;
enddecl
	begin
	if(p<r) then
	q = partition(p,r);
	dummy = quicksort(quicksort(True,p,q-1),q+1,r);
	endif;
	return True;
	end
}

 main(){
	decl
		Integer i;
		bool temp1;
	enddecl
	begin
		i = 1;
		while(i<=15) do
			a[i] = 16-i;
			i = i + 1;
		endwhile;
		i=1;
		while(i<=15) do
			write(a[i]);
			i=i+1;
		endwhile;
		temp1 = quicksort(True,1,15);
		write(111111111);
		i = 1;
		while(i<=15) do
			write(a[i]);
			i = i + 1;
		endwhile;
		
		return 1;
	end
}


//quick sort working