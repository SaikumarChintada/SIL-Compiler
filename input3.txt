decl
Integer a[16]; 
Integer partition(Integer p,r); 
bool quicksort(bool t; Integer p,r); 
Integer swap(Integer &x,&y),print(Integer n);
Integer search(Integer e,i,n);
Integer bsearch(Integer l,r,m,size,e);
enddecl



Integer swap(Integer &x,&y){
decl
Integer temp;
enddecl
	begin
		temp = x;
		x=y;
		y=temp;
		return 1;
	end
}

Integer partition(Integer p,r){
decl
Integer x,i,j,dummy;
enddecl	
begin
	x=a[r];
	i=p-1;
	j=p;
	while(j<r) do
		if (a[j]<=x) then
			i=i+1;
			dummy=swap(&a[i],&a[j]);
		endif;
		j=j+1;
	endwhile;
	dummy=swap(&a[i+1],&a[r]);
	return i+1;
	end
}

bool quicksort(bool t; Integer p,r)
{
decl
	Integer q; bool dummy;
enddecl
	begin
	if(p<r) then
	q = partition(p,r);
	dummy = quicksort(quicksort(True,p,q-1),q+1,r);
	endif;
	return True;
	end
}
Integer print(Integer n){
decl
	Integer i;
enddecl
begin
	i=0;
	while(i<n)do 
		write(a[i]);
		i = i +1;
	endwhile;
	return 1;
end
}


Integer search(Integer e,i,n){
decl
	Integer temp;
enddecl
begin
	temp = 1;
	if(i==n) then
		temp = 100;
	else 
		if(a[i] == e) then
			temp = i;
		else
			temp = search(e,i+1,n);
		endif; 
		
	endif;
	return temp;
end
}
Integer bsearch(Integer l,r,m,size,e){
decl
	Integer temp,i;
enddecl
begin

	if(l==m || m==size && a[m] != e) then
	 	i = 100;
	else
		if(a[m] == e) then	
			i = m;
		else
			if(a[m] < e) then
				temp = r+m ;
				temp = temp/2;
				i = bsearch(m+1,r,temp,size,e);
			else
				temp = l+m;
				temp = temp/2;
				i = bsearch(l,m-1,temp,size,e);
			endif;
			
		endif;

	endif;
	
	return i;
end
}
main(){
	decl
		Integer i,j,t;
		bool temp1;
	enddecl
	begin
		i = 0;
		read(j);
		while(i<=15) do
			a[i] = 16-i;
			i = i + 1;
		endwhile;
		t = print(16);
		temp1 = quicksort(True,0,15);
		write(111111111);
		t = print(16);
		t = search(4,0,16);
		write(t);
		t = bsearch(0,15,7,16,4);
		write(t);
		return 1;
	end
}
